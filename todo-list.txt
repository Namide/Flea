system
	data
		list
			ElementList.php
			LanguageList.php
			PageList.php
		Element.php
		Page.php
		//DynamicPage.php	=> remplacé par GET dans PAGES
		//RequestPage.php	=> remplacé par GET dans PAGES
		Saver.php
		
		General.php => currentLang, currentPage, currentUrl, state
		
	helpers
		
		common
			InitUtil.php
			BuildUtil.php
			_TemplateUtil.php [ mustache( $content, &$page ) => render( $content, $page = -1 ) ]
			
		miscellaneous
			SearchEngine.php // indexes...
			? TradUtil.php
			ImgUtil.php
			DateUtil.php
		
		system
			Router.php
			Cache.php
			FileUtil.php
			DataUtil.php
				_construct( dir, name )
				add( key, content, type = file /* json */ );
				update( key, content );
				get( key )
				getType( key )
				has( key )
				render( key )

			//SaveUtil.php
			UrlUtil.php
			
	init
		start.php
		imports.php
		load.php
		build.php
		
	admin
		admin
		SEO-utils
		content-utils
		unit-testing
		
	
content
	initBegin.php
	initLang.php
	initPages.php
	
template





TO-DO

	sort the Pages by date

	"mustache" après le template !
	
	Url
		suppression du GET de la page
		réatribution des autres GET (si URLRewritting)
		transformation des GET ?a=b en a/b
		rootURL = (domain + root directory) = http://google.com/analytics/
		rootURL + pageURL + getURL = absURL
		pageURL + getURL = relURL
		
	Router
		composé avec UrlUtil
		(gestion URL en premier lieu sans init pour décomposer et sécuriser actuelle)
		phase avant init
		phase cache
		
	singletons -> utilisable sans méthode getInstance() pour InitUtil, BuildUtil et TemplateUtil
	language -> lang
	
	Flea.variables (old mustache) !
		{{rootPath}}
		{{templatePath}}
		{{contentPath}}
		
		{{lang}}
		{{description}}
		{{title}}
		{{body}}

		{{pageContentPath}}
		
		{{idPageToAbsUrl:basic/homepage}}
		? dynamic pages ?

		!date
	
	PageList
		possibilité de stoquer les URLs et les tags
		possibilité de fonctionner sans initialisation à partir des URL et des tags
				
	echoPage() ( routing.php ) => dans Classe
